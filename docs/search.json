[
  {
    "objectID": "aboutPage/about.html",
    "href": "aboutPage/about.html",
    "title": "Hi, I’m Josh Pearlson",
    "section": "",
    "text": "I currently work in finance in NYC creating and applying advanced analytics to problems in fundamental and systematic investing. Previously, I graduated from Washington University in St. Louis where I studied Computer Science and Finance. My main interests are modeling, machine learning, and capital markets. I love meeting and connecting with new people, so feel free to email me or LinkedIn message me!\n\n\n\n\nExperienceAwardsPapersEducationHobbies\n\n\nBlackRock Analyst | Summer 2025 - Current | New York, NY \nBlackRock Intern | Summer 2024 | New York, NY  &gt; Securities lending optimization\nWashington University Natural Language Processing Laboratory Research Lab Member | August 2022 - August 2024  &gt; Joined pre-ChatGPT. Conducted NLP research using HPC to train and evaluate LLMs, supporting several research projects (including my own: DPFM@ICLR 2024).\nMoody’s Analytics Software Engineering Intern | Summer 2023 | New York, NY &gt; Worked on the NewsEdge team (NewsEdge) delivering ultra-low-latency news data.\nPlayBook (Startup) Data Science Intern | Summer 2022 | Boston, MA\nHarvard Surgical Navigation and Robotics Laboratory Research Intern | Summer 2020 | Boston, MA\n\n\nOutstanding Junior Award | Department of Computer Science  Hackathon WashU 2023 Winner | Social Connections Category  Dean’s List | All Semesters \n\n\nLarge Language Models Recognize Decentralized Finance Entities Lead Author - Data Problems for Foundation Models at International Conference on Learning Representations 2024 Link \nMapping Lesions from MP-MRI using Convolution Neural Network Lead Author - SPIE Medical Imaging 2020 Link\n\n\nWashington University in St. Louis BS in Computer Science & Finance August 2021 - May 2025\n\n\n\nPoker (PLO, NLTH, HU)\nChess\nBasketball (go Celtics)\nTennis\nGym (former Powerlifter for 3 years)"
  },
  {
    "objectID": "articles/blog.html",
    "href": "articles/blog.html",
    "title": "Articles",
    "section": "",
    "text": "Modeling a Coin Flip Game\n\n\n\n\n\n\npython\n\n\nprobability\n\n\n\n\n\n\n\n\n\nAug 16, 2024\n\n\nJosh Pearlson\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "articles/posts/coin-flip-game/modelCoinFlipGame.html",
    "href": "articles/posts/coin-flip-game/modelCoinFlipGame.html",
    "title": "Modeling a Coin Flip Game",
    "section": "",
    "text": "A casino offers a game: Flip a coin as long as you want. Your prize is the ratio of heads to total flips. What’s your strategy to maximize your winnings?"
  },
  {
    "objectID": "articles/posts/coin-flip-game/modelCoinFlipGame.html#coin-flip-game",
    "href": "articles/posts/coin-flip-game/modelCoinFlipGame.html#coin-flip-game",
    "title": "Modeling a Coin Flip Game",
    "section": "Coin Flip Game",
    "text": "Coin Flip Game\nImagine you’re in a casino, instead of slot machines or table games you are offered a coin game. He explains the rules:\n\nI will pay you based on the outcome of a coin flip game. You can flip the coin as many times as you want, and you can stop whenever you like. I will pay you based on the ratio of heads to total flips. I will charge you 75 cents to play and pay you your heads to total flips ratio in cents. Would you like to play?\n\nAt first glance it appears the casino is offering us a losing wager (as is typical). In any long-run scenario you would expect to get a ratio of 1/2 heads to total flips, since heads and tails are equally likely to occur on any given flip. In that case, we would be paying 75 cents to play a game where we would only be getting paid 50 (1 heads for every 1 tails) cents! While this may seem like a losing game at first, we will suspend our intuition and allow for logic to guide our decision making. In the end, we will learn about the value of optionality and how it is used to our advantage in this game."
  },
  {
    "objectID": "articles/posts/coin-flip-game/modelCoinFlipGame.html#basic-strategy",
    "href": "articles/posts/coin-flip-game/modelCoinFlipGame.html#basic-strategy",
    "title": "Modeling a Coin Flip Game",
    "section": "Basic Strategy",
    "text": "Basic Strategy\nFirst, let’s review the problem: We have a fair coin (50% heads, 50% tails) and we can flip it as many times as we want. Our goal is to maximize the ratio of heads to total flips.\nFirst, we should think about a simplified case to get a better understanding of the game dynamics. We will create a decision tree to visualize our options following the outcome of the first flip:\nStart Game\n     |\n     +-- Flip 1: Heads (50% chance)\n     |     |\n     |     +-- Ratio is 1.0 (1 head / 1 flip)\n     |     +-- DECISION: STOP. This is the best possible ratio.\n     |     +-- OUTCOME: Profit (1.0 payout &gt; 0.75 cost)\n     |\n     +-- Flip 1: Tails (50% chance)\n           |\n           +-- Ratio is 0.0 (0 heads / 1 flip)\n           +-- DECISION: CONTINUE. Stopping means a 0.0 payout.\n                 |\n                 +-- Keep flipping...\n                 +-- Long-run ratio approaches 0.5\n                 +-- OUTCOME: Loss (0.5 payout &lt; 0.75 cost)\nThe key thing to note here is that when we flip heads on the first flip we win the game outright with the best possible payout ratio of 1.0 heads/total flips (giving us the game’s maximum profit of 100 (payout) - 75 (cost) = 25 cents). However if we flip tails on the first flip we are in a losing situation where we will have to continue flipping, right now we will assume that we will just flip until we get the long-run ratio of 0.5 heads/total flips.\nAs you can see, based on the naive strategy I have outlined above we offer a lower bound on the expected value of this game itself. We have devised a strategy playing the game where half of the time we will win 25 cents (flipping heads on the first flip) and half of the time we will lose 25 cents (flipping tails on the first flip and continuing to the long-run ratio of 0.5 heads/total flips). Thus we can say that the expected value of this game is at least:\n\n\\[\n\\begin{aligned}\nEV_{game} &\\geq  \\\\\n&\\frac{1}{2} (1.0 - 0.75) +\n\\frac{1}{2} (0.5 - 0.75)  \\\\\n&= \\frac{1}{2} (0.25) +\n\\frac{1}{2} (-0.25) \\\\\n&= \\$0\n\\end{aligned}\n\\]\n\nIf we wish to improve on this strategy we need to consider a new approach. What if we consider stopping at the first time that we see we have flipped heads more often than tails?\n\nStop When Heads &gt; Tails Strategy\nI will create a table with the first couple of possible stopping points (locations where # heads &gt; # tails) for this game:\n\n\n\n\n\n\n\n\n\n\nFlip Sequence\nHeads\nTails\nRatio (Heads/Total Flips)\nProbability of sequence\n\n\n\n\nH\n1\n0\n1.0\n1/2\n\n\nT H H\n2\n1\n0.67\n1/2 ^3\n\n\nT T H H H\n3\n2\n0.60\n1/2 ^5\n\n\nT H T H H\n3\n2\n0.60\n1/2 ^5\n\n\n\nFrom the table above we can see that if we stop at the first time we have more heads than tails we can achieve a ratio of 1.0, .67, .60, etc. Each stopping point is less and less likely, there is \\(\\frac{1}{2}^{\\text{\\# total flips}}\\) chance of achieving each outcome. However, we can see that the ratios we achieve are all greater than 0.5 heads/total flips. Another thing we notice is that the longer sequences clearly have many more paths (at much lower likelihoods) than the shorter sequences.\nLet’s plot the possible outcomes of this game to count the number of paths that lead to each outcome:\n\n\n\n\n\n\n\n\n\nAs we can see above, we have the blue line showing the threshold where the number of heads and tails flipped are equal. The red dots are showing us our stopping points, where we have flipped more heads than tails for the first time. Only valid paths from (0,0) to each red dot without crossing the blue line are possible outcomes of the strategy! We also know that each time we flip a coin N times our chance of getting one exact path is 1/2^N. Given this graphical representation we can now use combinatorics to count the number of paths that lead to each stopping point and multiply this by our probability of getting to that same path.\nFor some arbitrary number k, we will stop when we have flipped k+1 heads and k tails. The total number of flips will be 2k+1 and our heads/total flips ratio will be (k+1)/(2k+1).\nThe EV of this game can be calculated as the sum of each flips ratio multiplied by the probability of reaching that ratio minus the cost to play (75 cents).\n\n\\[\n\\begin{aligned}\nEV_{game} &= \\sum_{k=0}^{\\infty} \\left( \\frac{\\text{Heads}}{\\text{Total Flips}} \\cdot P(k) \\right) - 0.75 \\\\\nEV_{game} &= \\sum_{k=0}^{\\infty} \\left( \\frac{k+1}{2k+1} \\cdot P(k) \\right) - 0.75 \\\\\n\\end{aligned}\n\\]\n\nOk, So how do we calculate P(k)? Enter, our graphical representation above! Here we can see that there are a number of paths that lead to each stopping point. However not all paths are valid, since some paths cross the blue line (where heads = tails) before reaching the stopping point. To calculate the number of valid paths to each stopping point we can use the ballot theorem from combinatorics.\n\nThe ballot theorem states that if in an election candidate A receives h votes and candidate B receives k votes with h&gt;k, then the number of ways the votes can be counted such that A is always strictly ahead of B is given by:\n\n\n\\[\n\\begin{aligned}\n\\frac{h-k}{h+k} \\binom{h+k}{k} \\\\\n\\end{aligned}\n\\]\n\nA special case of this theorem is when h = k + 1, exceeding votes by exactly one. If we think back to path counting, this problem is equivalent to us counting paths where we stop when heads exceeds tails by exactly one! Let’s now solve for this special case:\n\n\\[\n\\begin{aligned}\n% & \\frac{h-k}{h+k} \\binom{h+k}{k} \\\\\n& h = k + 1 \\\\\n& \\text{Substituting h for its new value of k + 1}  \\\\\n& = \\frac{(k+1)-k}{(k+1)+k} \\binom{(k+1)+k}{k} \\\\\n& = \\frac{1}{2k+1} \\binom{2k+1}{k} \\\\\n& = \\frac{1}{2k+1} \\cdot \\frac{(2k+1)!}{(k+1)! k!} \\\\\n& (2k+1)! = (2k+1)(2k!) \\\\\n& = \\frac{1}{2k+1} \\cdot \\frac{(2k+1)(2k!)}{(k+1)! k!} \\\\\n& = \\frac{2k!}{(k+1)! k!} \\\\\n& (k+1)! = (k+1)(k!) \\\\\n& = \\frac{2k!}{(k+1)(k!) k!} \\\\\n& = \\frac{1}{k+1} \\cdot \\frac{2k!}{k! k!} \\\\\n& = \\frac{1}{k+1} \\binom{2k}{k} \\\\\n\\end{aligned}\n\\]\n\nThe sequence we have arrived at above is a very famous sequence in combinatorics called the Catalan numbers. Catalan numbers have many applications in combinatorial mathematics including counting valid parentheses expressions, counting rooted binary trees, and counting paths in a grid that do not cross a diagonal line. In our case we are using them to count the number of valid paths to each stopping point in our coin flip game. The number of paths to the k-th number stopping point (where num heads = k + 1 and num tails = k) happens to be the k-th Catalan number!\nNow that we have everything we need, Let’s calculate the expected value of the stop when heads exceeds tails by one strategy.\n\n\nCalculating EV of Stop When Heads &gt; Tails\nStrategy: Let each stopping point k be defined as the first time # heads = k + 1 and # tails = k. In this game we are paid out based on the number of heads / total flips ratio at some stopping point k. As defined previously the value at the k-th stopping is (k + 1) / (2k + 1). The probability of reaching this stopping point is equal to the number of valid paths to this stopping point (equivalent to the kth Catalan number) multiplied by the probability of reaching any one path (1/2^(total flips) = (1/2 ^ (2k+1)). We also know trivially that the EV of the game is equal to the payout minus the cost to play the game (75 cents). First let’s calculate the expected payout (EP) of this strategy:\n\n\\[\n\\begin{aligned}\nEP_{strategy} &= \\sum_{k=0}^{\\infty} \\left( \\frac{\\text{Heads}}{\\text{Total Flips}} \\cdot P(k) \\right) \\\\\nEP_{strategy} &= \\sum_{k=0}^{\\infty} \\left( \\frac{k+1}{2k+1} \\cdot P(k) \\right) \\\\\nP(k) &= C_k \\cdot \\left( \\frac{1}{2} \\right)^{2k+1} \\\\\nEP_{strategy} &= \\sum_{k=0}^{\\infty} \\left( \\frac{k+1}{2k+1} \\cdot C_k \\cdot \\left( \\frac{1}{2} \\right)^{2k+1} \\right) \\\\\nEP_{strategy} &= \\sum_{k=0}^{\\infty} \\left( \\frac{k+1}{2k+1} \\cdot \\frac{1}{k+1} \\binom{2k}{k} \\cdot \\left( \\frac{1}{2} \\right)^{2k+1} \\right) \\\\\nEP_{strategy} &= \\sum_{k=0}^{\\infty} \\left( \\frac{1}{2k+1} \\cdot \\binom{2k}{k} \\cdot \\left( \\frac{1}{2} \\right)^{2k+1} \\right) \\\\   \nEP_{strategy} &= \\sum_{k=0}^{\\infty} \\left( \\frac{1}{2k+1} \\cdot \\frac{(2k)!}{(k!)^2} \\cdot \\left( \\frac{1}{2} \\right)^{2k+1} \\right) \\\\\n&\\text{After further simplification we arrive at:} \\\\\nEP_{strategy} &= \\frac{1}{2} * \\sum_{k=0}^{\\infty} \\left( \\frac{\\binom{2k}{k}}{4^k (2k+1)} \\right) \\\\\n\\end{aligned}\n\\]\n\nHere we rely on a clever mathematical result that states that the sum above is equal to the Taylor series expansion of arcsin(x) evaluated at x = 1. The result is as follows:\n\n\\[\n\\begin{aligned}\n\\arcsin(x) &= \\sum_{k=0}^{\\infty} \\left( \\frac{\\binom{2k}{k}}{4^k (2k+1)} x^{2k+1} \\right) \\\\\n\\arcsin(1) &= \\sum_{k=0}^{\\infty} \\left( \\frac{\\binom{2k}{k}}{4^k (2k+1)}  \\right) \\\\\n\\arcsin(1) &= \\frac{\\pi}{2} \\\\\n\\frac{\\pi}{2} &= \\sum_{k=0}^{\\infty} \\left( \\frac{\\binom{2k}{k}}{4^k (2k+1)} \\right)\\\\\nEP_{strategy} &= \\frac{1}{2} * \\frac{\\pi}{2} = \\frac{\\pi}{4} \\approx 0.7854 \\\\\nEV_{strategy} &= EP_{strategy} - \\text{Cost to Play} \\\\\nEV_{strategy} &= \\frac{\\pi}{4} - 0.75 \\approx 0.0354 \\\\\n\\end{aligned}\n\\]\n\nAmazing! We have now turned our break-even strategy into one that mathematically wins over time! By stopping the game at the first time we have flipped more heads than tails we can expect to win about 3.54 cents per game in the long-run. This would be a ROI of about 4.72% on each 75 cent wager!"
  },
  {
    "objectID": "articles/posts/coin-flip-game/modelCoinFlipGame.html#strategy-improvement",
    "href": "articles/posts/coin-flip-game/modelCoinFlipGame.html#strategy-improvement",
    "title": "Modeling a Coin Flip Game",
    "section": "Strategy Improvement",
    "text": "Strategy Improvement\nThe ‘stop when heads &gt; tails’ strategy clearly works, however, it seems like there could be a better strategy. What if we only accept a heads/total flips ratio of greater than 0.51, or 0.55, or 0.60? Could we do even better?\nIn this exploration two things interest me most:\n\nWhat is the optimal policy for the ‘stop when heads/total flips &gt; X’ strategy?\nIs there a better policy that could outperform stop when ‘heads/total flips &gt; X’?\n\nFirst, let’s tackle modeling the ‘stop when heads/total flips &gt; X’ strategy. I wrote a simple python simulation to model this game and test various stopping points. The code is as follows:\n\nPython Simulation for ‘Stop When Heads/Total Flips &gt; X’ Strategy\n\ndef run_numpy_simulation(num_simulations: int, max_flips: int, stop_ratio: float) -&gt; float:\n    flips = np.random.randint(\n        0, # Inclusive lower bound\n        2, # Exclusive upper bound\n        size=(num_simulations, max_flips) # Number of simulations, number of flips per simulation\n        )\n\n    num_heads = np.cumsum(flips, axis=1) # Cumulative sum of heads along each row\n    flip_numbers = np.arange(1, max_flips + 1) # Total flips \n    ratios = num_heads / flip_numbers # Ratio of heads to total flips\n    exceeds_threshold = ratios &gt; stop_ratio # Find where ratios exceeded the stop ratio\n    first_exceed_indices = np.argmax(exceeds_threshold, axis=1) # Find the first time where this happened\n\n    # If we never exceed, set the index to last flip\n    never_exceeds = ~exceeds_threshold.any(axis=1)\n    first_exceed_indices[never_exceeds] = max_flips - 1\n\n    final_ratios = ratios[np.arange(num_simulations), first_exceed_indices] # Final ratios\n    final_ratios[never_exceeds] = np.maximum(0.5, final_ratios[never_exceeds]) # Ensure min ratio of 0.5 (long-run average)\n    return float(np.mean(final_ratios))\n\nprint(\"Running simulations...\")\nnum_simulations = 2_000_000  # 2 million sims \nmax_flips = 1000 # 1000 max flips per simulation\n\nresults = []\n# Test a range of stop_ratios from 0.50 to 0.64\nstop_ratios_to_test = np.arange(0.5, 0.64, 0.01)\n\nfor stop_ratio in stop_ratios_to_test:\n    print(f\"Simulating for stop ratio: {stop_ratio:.2f}...\")\n    avg_ratio = run_numpy_simulation(num_simulations, max_flips, stop_ratio)\n    results.append({'Stop Ratio': round(stop_ratio, 2), 'Expected Payout': avg_ratio})\n    print(\"=\"*50)\n\nprint(\"Simulations complete.\")\n# Results Dataframe! \ndf_all_results = pd.DataFrame(results).set_index('Stop Ratio')\n\n\ndf_all_results['Expected Value'] =  df_all_results['Expected Payout'] - 0.75  # Adjusted Expected Value\ndf_all_results['Expected Payout'].plot(\n    kind='line',\n    figsize=(10, 6),\n    marker='o',\n    title=f'Expected Payout across {num_simulations:,} Simulations',\n    xlabel='Stop Ratio',\n    ylabel='Heads / Total Flips',\n    color ='green'\n)\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\n\ndf_all_results\n\n\n\n\n\n\n\n\nExpected Payout\nExpected Value\n\n\nStop Ratio\n\n\n\n\n\n\n0.50\n0.785382\n0.035382\n\n\n0.51\n0.785749\n0.035749\n\n\n0.52\n0.786531\n0.036531\n\n\n0.53\n0.787559\n0.037559\n\n\n0.54\n0.788118\n0.038118\n\n\n0.55\n0.788536\n0.038536\n\n\n0.56\n0.788972\n0.038972\n\n\n0.57\n0.788434\n0.038434\n\n\n0.58\n0.788622\n0.038622\n\n\n0.59\n0.787903\n0.037903\n\n\n0.60\n0.787989\n0.037989\n\n\n0.61\n0.788028\n0.038028\n\n\n0.62\n0.786756\n0.036756\n\n\n0.63\n0.785774\n0.035774\n\n\n0.64\n0.784747\n0.034747\n\n\n\n\n\n\n\nFirst, we can confirm that these results are reasonable. Our ‘stop when heads &gt; tails’ strategy that we calculated earlier using pure mathematics is equivalent to a stop ratio of 0.5 heads / total flips. We can see that for 0.50 stop ratio our payout is modeled at about 0.7854, which is the exact value that we got when mathematically calculating its expected payout!\nFrom these results, it appears the optimal stopping ratio is around 0.56, yielding an expected payout of about 0.789 heads/total flips. This is approximately equal to a profit of 3.9 cents per game played! This is slightly better than our previous strategy of stopping when heads first exceeds tails. The 3.9 cent profit per game is now an ROI of about 5.2% on each 75 cent wager.\n\n\nThe Most Optimal Policy\nNow we have figured out the optimal policy for the ‘stop when heads/total flips &gt; X’ strategy. However, is there a better policy that could outperform stop when ‘heads/total flips &gt; X’?\nIn theory, yes. By creating some policy that scales stopping ratio by marginal variance per flip you could achieve better outcomes (think about this and try it out yourself). However, instead we will focus on a more theoretically interesting idea.\nBut first as an aside, let’s introduce potentially one of the coolest named theorems in probability: the Infinite Monkey Theorem (link).\n\n\n\nInfinite Monkey Theorem\n\n\n\nThe core idea of the infinite monkey theorem is a thought experiment. Let’s say you have one monkey and have him sit down and randomly hit keys on a typewriter for an infinite amount of time. Given infinite time, the monkey will certainly type out any given possible text, including the complete works of Shakespeare.\n\nWell, let’s follow this logic for our coin flip game. Given infinite time, we would expect any sequence of heads and tails to eventually occur (if we never stop flipping). Obviously, in practice Python cannot model infinite time. However, a new policy appears when we consider this theorem. What if we simply only stop flipping when we reach a ratio of .999 repeated heads/total flips? While this may feel like a cop-out answer, it is in theory the optimal policy given we have infinite time to continue flipping the coin and never stop. If we truly can flip forever, or even simulate in some way infinite time, we would eventually reach a ratio of .999 repeated heads/total flips! This would give us a payout of 99.99 repeated cents, and a profit of 24.99 repeated cents per game played! This would be a massive ROI of 33.33 % repeated."
  },
  {
    "objectID": "articles/posts/coin-flip-game/modelCoinFlipGame.html#findings",
    "href": "articles/posts/coin-flip-game/modelCoinFlipGame.html#findings",
    "title": "Modeling a Coin Flip Game",
    "section": "Findings",
    "text": "Findings\nThis analysis reveals that a seemingly unfavorable coin-flip game can be transformed into a profitable venture through the strategic application of optionality. The core finding is that by having the freedom to stop at any point, a player can devise a policy that systematically beats the game’s apparent long-run expectation of a 50-cent payout.\n\nAnalytical Solution:\n\nWe first established a baseline profitable strategy: stopping the game the first time the number of heads exceeds the number of tails. Using combinatorics and the properties of Catalan numbers, we analytically derived the expected payout for this strategy to be exactly π/4 ≈ 0.7854. With a cost of 0.75, this yields a positive expected value of approximately 3.54 cents per game.\n\nNumerical Optimization:\n\nThrough large-scale Monte Carlo simulations (2 million runs), we refined this approach by testing various static stopping thresholds. The simulations confirmed our analytical result and identified a more optimal policy: stopping only when the ratio of heads to total flips exceeds 0.56. This optimized policy increases the expected payout to approximately 0.789, boosting the expected profit to 3.9 cents per game and achieving a return on investment of over 5%.\n\nThe Value of Optionality:\n\nThe essential insight is that the player’s ability to choose when to stop provides a significant edge. While the long-term probability of heads is 50%, the player can selectively end the game during periods of favorable short-term variance, thereby capturing a payout greater than the underlying average."
  },
  {
    "objectID": "articles/posts/coin-flip-game/modelCoinFlipGame.html#future-work",
    "href": "articles/posts/coin-flip-game/modelCoinFlipGame.html#future-work",
    "title": "Modeling a Coin Flip Game",
    "section": "Future Work",
    "text": "Future Work\nThe strategies explored in this article, while profitable, are based on a static stopping rule. This opens the door to several avenues for more advanced research and optimization.\n\nDynamic Stopping Policy:\n\nThe primary limitation of the current model is its use of a constant stopping ratio. A more sophisticated approach would be to implement a dynamic policy where the decision to stop or continue depends on the current state of the game (i.e., the number of heads and the total number of flips). For instance, a 52% ratio after 1,000 flips is far more statistically significant and secure than a 52% ratio after only 25 flips.\n\nAnalysis with a Biased Coin:\n\nThe analysis could be extended to scenarios involving a biased coin (where P(Heads) ≠ 0.5). This would require recalculating the expected values and likely shift the optimal stopping thresholds, providing insight into how the strategy adapts to different underlying probabilities.\n\nRisk-Adjusted Strategies:\n\nThe current work focuses exclusively on maximizing expected value. A real-world player might be risk-averse and prefer a strategy that, for example, maximizes the probability of breaking even or minimizes the chance of a significant loss. Future analysis could incorporate utility theory to develop strategies that align with different risk profiles.\n\nExploring Different Payout Structures:\n\nHow would the optimal strategy change if the casino altered the payout function? Investigating non-linear payouts (e.g., (heads/total_flips)^2) or introducing different cost structures would test the robustness of our findings and lead to more generalized solutions for this class of optionality-based games.\n\nThese are just some initial thoughts by me and I am open to discussion. As always, feel free to reach out to me for suggestions on future articles or comments."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "JCP",
    "section": "",
    "text": "jcp@home:~\n\n\n\n\n\n\n\n\n 🌌"
  }
]